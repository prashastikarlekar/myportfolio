[
	{
		"project": "VisionVerse: Video Sharing App",
		"url": "https://github.com/prashastikarlekar/visionVerseApp",
		"liveUrl": "https://expo.dev/accounts/prashastikarlekar/projects/VisionVerse/builds/9a6b2ad5-277e-436e-98c9-82b8b5862b1c",
		"repo": "Public",
		"descriptionTitle": "VisionVerse is a video sharing app where users upload videos along with AI-generated prompts, allowing seamless playback, pause, and full-screen viewing of the content. ",
		"features": "Built with React Native for seamless user experiences, Animatable for captivating animations, and integrated with the dependable backend systems of Appwrite, enabling seamless sharing of AI videos within the community.",
		"imageOptions": [{ "key": "size", "value": "large" }],
		"images": [
			{
				"key": "mock-stack",
				"hover": "left",
				"h": "550",
				"w": "370",

				"url": "/img/visionverse.jpg"
			}
		],
		"stack": [
			{ "key": "react", "name": "React Native", "type": "devicon" },
			{ "key": "tailwindcss", "name": "Nativewind", "type": "devicon" },
			{ "key": "slack", "name": "Expo", "type": "devicon" },

			{ "key": "redux", "name": "ContextAPI", "type": "devicon" },
			{
				"key": "codepen",
				"name": "Animatable",
				"type": "devicon"
			},

			{ "key": "appwrite", "name": "Appwrite", "type": "devicon" }
		]
	},
	{
		"project": "CodeGuardian -Ticketing App",
		"url": "https://github.com/prashastikarlekar/CodeGuardian-Ticketing-App",
		"liveUrl": "",
		"repo": "Public",
		"descriptionTitle": "The CodeGuardian Ticketing App is a sleek solution built with Next.js, MongoDB Atlas, and Mongoose, designed to simplify bug tracking. It offers seamless ticket creation, updates, and deletions, providing teams with a hassle-free experience. ",
		"features": "This app boosts team productivity and collaboration by centralizing bug tracking efforts. ",
		"imageOptions": [{ "key": "size", "value": "large" }],
		"images": [
			{
				"key": "mock-stack",
				"hover": "right",
				"h": "400",
				"w": "470",
				"url": "/img/ticketing_2.png"
			}
		],
		"stack": [
			{ "key": "nextjs", "name": "Next.js", "type": "devicon" },
			{ "key": "mongodb", "name": "Mongodb", "type": "devicon" },
			{
				"key": "mongodb",
				"name": "Atlas",
				"type": "devicon"
			},

			{ "key": "mongodb", "name": "Mongoose", "type": "devicon" },
			{ "key": "tailwindcss", "name": "TailwindCSS", "type": "devicon" }
		]
	},
	{
		"project": "Student Marketplace",
		"url": "https://github.com/prashastikarlekar/studentMarketplace",
		"liveUrl": "https://student-marketplace1.000webhostapp.com/",
		"repo": "Public",
		"descriptionTitle": "This dynamic online platform is designed to connect students for buying and selling various products within their academic community. ",
		"features": "Built on Vite, React, PHP, this platform provides features like product search, pagination, robust chat feature, profile management, seller ratings, filtering, wishlisting products, etc. ",
		"imageOptions": [{ "key": "size", "value": "large" }],
		"images": [
			{
				"key": "mock-stack",
				"hover": "left",
				"h": "450",
				"w": "560",

				"url": "/img/marketplace_2.png"
			}
		],
		"stack": [
			{ "key": "react", "name": "React.js", "type": "devicon" },
			{ "key": "vite", "name": "Vite", "type": "devicon" },

			{ "key": "php", "name": "PHP", "type": "devicon" },
			{
				"key": "redux",
				"name": "React-Redux",
				"type": "devicon"
			},

			{ "key": "mysql", "name": "SQL", "type": "devicon" },
			{ "key": "php", "name": "phpMyAdmin", "type": "devicon" },
			{ "key": "bootstrap", "name": "Bootstrap", "type": "devicon" }
		]
	},

	{
		"project": "Distributed Map Reduce",
		"url": "https://github.com/prashastikarlekar/Distributed-Map-Reduce",
		"liveUrl": "",
		"repo": "Public",
		"descriptionTitle": "Distributed Map Reduce implements the MapReduce paradigm for efficient large-scale data processing, showcasing Word Count and Inverted Index applications.",
		"features": "This project provides a comprehensive MapReduce implementation for efficient data processing, featuring key components like a TCP server, master node, and key-value server. Users can utilize built-in Word Count and Inverted Index applications, with flexible configuration and fault tolerance mechanisms ensuring reliability. ",
		"imageOptions": [{ "key": "size", "value": "large" }],
		"images": [
			{
				"key": "portfolio",
				"hover": "right",
				"h": "230",
				"w": "320",

				"url": "/img/mapreduce_1.png"
			}
		],
		"stack": [
			{ "key": "python", "name": "Python", "type": "devicon" },
			{ "key": "google", "name": "GCP", "type": "devicon" },
			{
				"key": "slack",
				"name": "Shell / Bash Scripting",
				"type": "devicon"
			},

			{ "key": "google", "name": "Google Cloud Firestore", "type": "devicon" },
			{ "key": "google", "name": "Google Cloud Bucket", "type": "devicon" },
			{ "key": "slack", "name": "Network Sockets", "type": "devicon" },

			{ "key": "git", "name": "Git", "type": "devicon" }
		]
	},

	{
		"project": "Distributed Key-Value Store",
		"url": "https://github.com/prashastikarlekar/KeyValueStore_GCP",
		"liveUrl": "",
		"repo": "Public",
		"descriptionTitle": "Distributed KV store is a Python-based key-value store system featuring a TCP/IP server, supporting native storage, Google Cloud Firestore integration, and Google Cloud Bucket storage options for efficient data management and retrieval.",
		"features": "Its features include TCP/IP server for client interaction , Native storage using files in the 'data' folder, Google Cloud Firestore integration for NoSQL storage, Google Cloud Bucket storage for scalable file storage, Client process for issuing set and get requests, Workflow automation using the everything.sh script",
		"imageOptions": [],
		"images": [
			{
				"key": "mock-stack",
				"hover": "left",
				"h": "290",
				"w": "500",
				"url": "/img/kv_1.png"
			}
		],
		"stack": [
			{ "key": "python", "name": "Python", "type": "devicon" },
			{ "key": "google", "name": "GCP", "type": "devicon" },
			{
				"key": "slack",
				"name": "Shell / Bash Scripting",
				"type": "devicon"
			},
			{ "key": "codepen", "name": "Memcahced Server", "type": "devicon" },
			{ "key": "google", "name": "Google Cloud Firestore", "type": "devicon" },
			{ "key": "google", "name": "Google Cloud Bucket", "type": "devicon" },

			{
				"key": "codepen",
				"name": "HTTP",
				"type": "devicon"
			},
			{
				"key": "slack",
				"name": "TCP/IP",
				"type": "devicon"
			}
		]
	}
]
